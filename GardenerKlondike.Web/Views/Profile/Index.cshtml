@model IEnumerable<GardenerKlondike.Web.Models.GoalViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Profile</h2>

<div id="calendar"></div>

<div id="calendar-modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="event-title"></span></h4>
            </div>
            <div class="modal-body">
                <p id="details"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<link href="~/Content/fullcalendar.min.css" rel="stylesheet" />
<link href="~/Content/fullcalendar.print.css" rel="stylesheet" media="print"/>

@section Scripts {
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/fullcalendar.min.js"></script>
    
    <script>
        $(document).ready(function () {
            var events = [];
            $.ajax({
                type: "GET",
                url: "/Profile/GetEvents",
                success: function(data) {
                    $.each(data,
                        function(i, v) {
                            events.push({
                                title: v.Subject,
                                description: v.Description,
                                start: moment(v.Start),
                                end: v.END_TO_END != null ? moment(v.End) : null,
                                color: v.ThemeColor,
                                allDay: v.IsFullDay
                            });
                        });

                    generateCalendar(events);
                },
                error: function(error) {
                    alert('failed');
                }
            });

            function generateCalendar(events) {
                $('#calendar').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    contentHeight: 400,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev, next today',
                        center: 'title',
                        right: 'month, basicWeek, basicDay, agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    eventClick: function(calEvent, jsEvent, view) {
                        $('#calendar-modal #event-title').text(calEvent.title);
                        var $description = $('</div>');
                        $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("DD-MMM-YYYY HH:mm a")));
                        if (calEvent.end != null) {
                            $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("DD-MMM-YYYY HH:mm a")));
                        }
                        $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                        $('#calendar-modal #details').empty().html($description);

                        $('#calendar-modal').modal();
                    }
                });
            }
        })
    </script>
}

<div class="container">
    <p>
        @Html.ActionLink("Add New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                Goal
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsCompleted)
            </th>
            <th>
                Actions
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td width="10">
                    @Html.DisplayFor(modelItem => item.IsCompleted)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>

</div>