@model GardenerKlondike.Web.Models.ProfileViewModel

@{
    ViewBag.Title = "Index";
}

<div class="container background-gray">
    <h2 class="tab-main-header">Profile</h2>
    <div class="row">
        <div class="col-md-3">
            <h3>Events</h3>
            <p>
                @Html.ActionLink("Add New Event", "Create", "CalendarEvent", null, new { @class = "btn btn-default" })
            </p>
            <table class="table">
                <tr>
                    <th>
                        Subject
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>

                @foreach (var item in Model.CalendarEventViewModels)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Subject)
                        </td>
                        <td>
                            <div class="btn-group" role="group" aria-label="Basic example">
                                @Html.ActionLink("Detail", "Details", "CalendarEvent", new { id = item.Id }, new { @class = "btn btn-warning" })
                                @Html.ActionLink("Edit", "Edit", "CalendarEvent", new { id = item.Id }, new { @class = "btn btn-success" })
                                @Html.ActionLink("Delete", "Delete", "CalendarEvent", new {id = item.Id}, new
                                {
                                    @class = "btn btn-danger",
                                    onclick = "return confirm('Are you sure you wish to delete this Event?');"
                                })
                            </div>
                        </td>
                    </tr>
                }

            </table>

        </div>
        <div class="col-md-9">
            <h3>Calendar</h3>
            <div id="calendar"></div>

            <div id="calendar-modal" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title"><span id="event-title"></span></h4>
                        </div>
                        <div class="modal-body">
                            <p id="details"></p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="~/Content/fullcalendar.min.css" rel="stylesheet" />
<link href="~/Content/fullcalendar.print.css" rel="stylesheet" media="print" />

@section Scripts {
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/fullcalendar.min.js"></script>

    <script>
        $(document).ready(function () {
            var events = [];
            $.ajax({
                type: "GET",
                url: "/Profile/GetEvents",
                success: function(data) {
                    $.each(data,
                        function(i, v) {
                            events.push({
                                title: v.Subject,
                                description: v.Description,
                                start: moment(v.Start),
                                end: v.END_TO_END != null ? moment(v.End) : null,
                                color: v.ThemeColor,
                                allDay: v.IsFullDay
                            });
                        });

                    generateCalendar(events);
                },
                error: function(error) {
                    alert('failed');
                }
            });

            function generateCalendar(events) {
                $('#calendar').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    contentHeight: 400,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev, next today',
                        center: 'title',
                        right: 'month, basicWeek, basicDay, agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    eventClick: function(calEvent, jsEvent, view) {
                        $('#calendar-modal #event-title').text(calEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("DD-MMM-YYYY")));
                        if (calEvent.end != null) {
                            $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("DD-MMM-YYYY")));
                        }
                        $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                        $('#calendar-modal #details').empty().html($description);

                        $('#calendar-modal').modal();
                    }
                });
            }

            //$.ajax({
            //    type: "GET",
            //    url: "/Profile/GetWeather",
            //    success: function (data) {
            //        $("#name").text(data.name);
            //        $("#temp").text(data.main.temp);
            //        $("#humidity").text(data.main.humidity);
            //    },
            //    error: function (error) {
            //        alert('failed');
            //    }
            //});
        })
    </script>
}

<div class="container background-gray">
    <div class="row">
        <div class="col-md-8">
            <h3>Goals</h3>
            <p>
                @Html.ActionLink("Add New Goal", "Create", "Goal", null, new { @class = "btn btn-default" })
            </p>
            <table class="table">
                <tr>
                    <th>
                        Goal
                    </th>
                    <th>
                        IsCompleted
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>

                @foreach (var item in Model.GoalViewModels)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td width="10">
                            @Html.DisplayFor(modelItem => item.IsCompleted)
                        </td>
                        <td>
                            <div class="btn-group" role="group" aria-label="Basic example">
                                @Html.ActionLink("Details", "Details", "Goal", new { id = item.Id }, new { @class = "btn btn-warning" })
                                @Html.ActionLink("Edit", "Edit", "Goal", new { id = item.Id }, new { @class = "btn btn-success" })
                                @Html.ActionLink("Delete", "Delete", "Goal", new {id = item.Id}, new
                                {
                                    @class = "btn btn-danger",
                                    onclick = "return confirm('Are you sure you wish to delete this Event?');"
                                })
                            </div>
                        </td>
                    </tr>
                }

            </table>
        </div>
        <div class="col-md-4">
            <h3>Weather</h3>
            <div id="openweathermap-widget-15">
            </div>
        </div>
    </div>
</div>

<script>
    window.myWidgetParam ? window.myWidgetParam : window.myWidgetParam = [];
    window.myWidgetParam.push({ id: 15, cityid: '627904', appid: 'e50efa3ae2201efcb089d47c31c071a8', units: 'metric', containerid: 'openweathermap-widget-15', });
    (function () {
        var script = document.createElement('script');
        script.async = true; script.charset = "utf-8";
        script.src = "http://openweathermap.org/themes/openweathermap/assets/vendor/owm/js/weather-widget-generator.js";
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(script, s);
    })();
</script>

@*<p id="name"></p>
<p id="temp"></p>
<p id="humidity"></p>*@